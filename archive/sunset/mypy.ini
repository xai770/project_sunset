[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
strict_optional = True
warn_redundant_casts = True
warn_no_return = True
warn_unreachable = True
mypy_path = stubs

# Ignore missing imports from external libraries
[mypy.plugins.numpy.*]
follow_imports = skip
follow_imports_for_stubs = True

# Ignore llm_factory modules that don't have type stubs
[mypy.llm_factory.*]
ignore_missing_imports = True

# Ignore all modules in run_pipeline/cover_letter
[mypy.run_pipeline.cover_letter.*]
ignore_errors = True

# For specific modules that are imported but don't have type stubs
[mypy.llm_factory.core.types]
ignore_missing_imports = True

[mypy.llm_factory.core.ollama_client]
ignore_missing_imports = True

[mypy.llm_factory.modules.quality_validation.specialists_versioned.*]
ignore_missing_imports = True

[mypy.run_pipeline.ada_llm_factory_integration]
ignore_missing_imports = True

[mypy.run_pipeline.ada_llm_factory_integration_new]
ignore_missing_imports = True

# Specific configurations for files with acceptable unreachable code
[mypy.run_pipeline.utils.llm_client]
# Allow unreachable code for optional dependency handling
warn_unreachable = False

[mypy.run_pipeline.skill_matching.llm_skill_enricher]
# Allow unreachable code for optional dependency handling  
warn_unreachable = False

[mypy.run_pipeline.skill_matching.embedding_utils]
# Allow unreachable code for error handling paths
warn_unreachable = False

# Disable unreachable warnings for modules with optional dependencies
[mypy.run_pipeline.skill_matching.*]
warn_unreachable = False

[mypy.run_pipeline.utils.*]  
warn_unreachable = False
